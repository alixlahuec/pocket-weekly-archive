name: "Pocket all-time backup"
on:
  workflow_dispatch:

jobs:
  request:
    name: API Request to Pocket
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      today: '${{ steps.date.outputs.TODAY }}'
      filepath: 'archives/${{ steps.date.outputs.TODAY }}/${{ steps.date.outputs.TODAY }}.json'
    steps:
      - uses: actions/checkout@v2
      - name: Get today's date
        id: date
        run: echo "::set-output name=TODAY::$(date +'%Y-%m-%d')"
      - name: Calculate Unix timestamp from a week ago
        id: since
        run: echo "::set-output name=SINCE::$(date --date='1 week ago' +%s)"
      - name: Request the data from the Pocket API (POST)
        id: archive
        uses: Satak/webrequest-action@v1.2.3
        env:
          POCKET_CONSUMER_KEY: ${{ secrets.POCKET_CONSUMER_KEY }}
          POCKET_TOKEN: ${{ secrets.POCKET_TOKEN }}
          PAR_state: "unread"
          PAR_sort: "oldest"
          PAR_detailType: "complete"
        with:
          url: https://getpocket.com/v3/get
          method: POST
          payload: '{"consumer_key": "${{ env.POCKET_CONSUMER_KEY }}", "access_token": "${{ env.POCKET_TOKEN }}", "state": "${{ env.PAR_state }}", "sort": "${{ env.PAR_sort }}", "detailType": "${{ env.PAR_detailType }}"}'
      - name: Create test directory
        run: mkdir -p ${{ github.workspace }}/test/${{ steps.date.outputs.TODAY }}
      - name: Get ujson package
        run: python -m pip install ujson
      - name: Create weekly file
        shell: python
        run: |
          # -*- coding: utf-8 -*-
          import ujson
          null=None;
          items = ujson.dumps(${{ steps.archive.outputs.output }})
          with open('test/${{ steps.date.outputs.TODAY }}/${{ steps.date.outputs.TODAY }}.json', 'w') as f:
            f.write(items.replace("\\", ""))
      - name: Commit changes
        uses: elstudio/actions-js-build/commit@v3
        with:
          commitMessage: All-time backup

