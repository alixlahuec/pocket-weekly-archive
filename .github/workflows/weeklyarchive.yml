name: "Pocket weekly reading list"
on:
  workflow_dispatch:
  schedule:
    - cron: "11 8 * * SUN"

jobs:
  request:
    name: API Request to Pocket
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      today: '${{ steps.date.outputs.TODAY }}'
      filepath: '${{ steps.date.outputs.TODAY }}/${{ steps.date.outputs.TODAY }}.json'
    steps:
      - uses: actions/checkout@v2
      - name: Get today's date
        id: date
        run: echo "::set-output name=TODAY::$(date +'%Y-%m-%d')"
      - name: Calculate Unix timestamp from a week ago
        id: since
        run: echo "::set-output name=SINCE::$(date --date='1 week ago' +%s)"
      - name: Request the data from the Pocket API (POST)
        id: archive
        uses: Satak/webrequest-action@v1.2.3
        env:
          POCKET_CONSUMER_KEY: ${{ secrets.POCKET_CONSUMER_KEY }}
          POCKET_TOKEN: ${{ secrets.POCKET_TOKEN }}
          PAR_state: "unread"
          PAR_sort: "oldest"
          PAR_detailType: "complete"
          PAR_since: ${{ steps.since.outputs.SINCE }}
        with:
          url: https://getpocket.com/v3/get
          method: POST
          payload: '{"consumer_key": "${{ env.POCKET_CONSUMER_KEY }}", "access_token": "${{ env.POCKET_TOKEN }}", "state": "${{ env.PAR_state }}", "sort": "${{ env.PAR_sort }}", "detailType": "${{ env.PAR_detailType }}", "since": "${{ env.PAR_since }}"}'
      - name: Create weekly directory
        run: mkdir -p ${{ github.workspace }}/${{ steps.date.outputs.TODAY }}
      - name: Create weekly file
        uses: jsdaniell/create-json@1.1.2
        with:
          name: '${{ steps.date.outputs.TODAY }}.json'
          json: '${{ steps.archive.outputs.output }}'
          dir: '${{ steps.date.outputs.TODAY }}/'
      - name: Edit the raw JSON to avoid exposing Consumer Key
        uses: jossef/action-set-json-field@v1
        with:
          file: '${{ steps.date.outputs.TODAY }}/${{ steps.date.outputs.TODAY }}.json'
          field: payload.consumer_key
          value: 'SECRET'
      - name: Edit the raw JSON to avoid exposing Access Token
        uses: jossef/action-set-json-field@v1
        with:
          file: '${{ steps.date.outputs.TODAY }}/${{ steps.date.outputs.TODAY }}.json'
          field: payload.access_token
          value: 'SECRET'
      - name: Commit changes
        uses: elstudio/actions-js-build/commit@v3
        with:
          commitMessage: Automated weekly archive (${{ env.GITHUB_EVENT_NAME }})
  scrapping:
    name: Processing JSON output into Roam format
    needs: [request]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
      - name: Installing packages and sourcing functions
        shell: Rscript {0}
        run: |
          install.packages(c("dplyr", "lubridate", "scales", "rjson"))
          source("functions.R")
      - name: JSON wrangling
        shell: Rscript {0}
        run: |
          library(rjson)
          weekly.data <- rjson::fromJSON(file = '${{ needs.request.outputs.filepath }}')
          week.items <- weekly.data[["data"]][["list"]]
          roam.import <- list(list(title = paste0("[[Pocket Weekly Backlog]]/", lubridate::today()), children = list()))
          roam.import[[1]][["children"]] <- lapply(week.items, FUN = format_pocket_item)
          roam.import[[1]][["children"]] <- unname(roam.import[[1]][["children"]])
          roam.import.json <- rjson::toJSON(roam.import)
          write(roam.import.json, "${{ needs.request.outputs.today }}/roam_import.json")
      - name: Commit changes
        uses: elstudio/actions-js-build/commit@v3
        with:
          commitMessage: Automated Roam formatting (${{ env.GITHUB_EVENT_NAME }})
